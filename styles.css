:root {
    --color-light: #F8FFE5;
    --color-good: #06D6A0;
    --color-bad: #EF476F;
    --color-background: #3C3D40;
    --color-blend-bg-lgt: #9A9E93;
    --color-highlight: #FFC43D;

    --grid-font: "Dongle", sans-serif;
    --grid-font-size: calc(var(--cell-size)* 3 /2);

    --cell-size: 15vh;
    --mini-cell-size: 3vh;
}

/* RESET ALL BROWSER margins & paddings */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    background-color: var(--color-blend-bg-lgt);
}

nav {
    height: 10vh;
    background-color: var(--color-highlight);
    margin: 0;
    border: 0;
    padding: 10px;
    display: flex;
    justify-content: center;
    font-family: var(--grid-font);
    font-size: 50px;
}

h1 {
    font-family: var(--grid-font);
    font-size: 100px;
    color: var(--color-highlight);

}

h2 {
    font-family: var(--grid-font);
    font-size: 60px;
    color: var(--color-highlight);

}



ul {
    list-style-type: none;
}

.grid {
    display: grid;
    grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
    gap: calc(var(--cell-size)*30 /200);
}

/* Cells styles  */
.cell {
    height: var(--cell-size);
    width: var(--cell-size);
    background-color: var(--color-light);
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: var(--grid-font);
    font-size: var(--grid-font-size);
    /* user-select help with the behavior of the game by not letting mouse pointer change to select mode */
    user-select: none;
    transition-property: transform;
    transition-duration: .15s;
    transition-timing-function: ease-in-out;
}

.winning-cell {
    background-color: var(--color-good);
}

.losing-cell {
    background-color: var(--color-bad);
}

/* i had to duplicate this otherwise i think there was a specificity problem */
.mini-cell.losing-cell {
    background-color: var(--color-bad);
}
.mini-cell.winning-cell {
    background-color: var(--color-good);
}

.clickable:hover {
    transform: scale(1.2);
    transition-property: transform;
    transition-duration: .15s;
    transition-timing-function: ease-in-out;
    cursor: pointer;
}

.ticked-by-computer {
    transform: scale(1.2);
    transition-property: transform;
    transition-duration: .15s;
    transition-timing-function: ease-in-out;
}


/* Rematch button */

#rematch-button {
    margin: calc(var(--cell-size)*30 /200);
    border: 0;
    padding: 10px;
    width: var(--cell-size);
    border-radius: 10px;
    font-family: var(--grid-font);
    font-size: 50px;
    background-color: var(--color-light);
}

#rematch-button:hover {
    background-color: var(--color-good);
    transform: scale(1.2);
    cursor: pointer;
}

.hidden {
    display: none;
}


/* switching between interfaces */

.flip-button {
    width: 10vh;
    background-color: none;
    border: 0;
}

.flip-button:hover {
    transform: scale(2)translate(-2.5vh, -2.5vh);
    transition-property: transform;
    transition-duration: .3s;
    transition-timing-function: linear;

}

#front-face-flip-button {
    position: absolute;
    bottom: 0px;
    right: 0px;
}

#back-face-flip-button {
    position: absolute;
    bottom: 0px;
    left: 0px;
    transform: rotate(90deg);
}

#back-face-flip-button:hover {
    position: absolute;
    bottom: 0px;
    left: 0px;
    transform: rotate(90deg) scale(2) translate(-2.5vh, -2.5vh);
    transition-property: transform;
    transition-duration: .3s;
    transition-timing-function: linear;
}

/* Part about the machine interface (backside) */


.card-back-face section {
    max-width: max-content;
    place-self: center;
}

/* GAME HISTORY SECTION */

#game-history {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}

#database {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
}


.mini-grid {
    display: grid;
    grid-template: 1fr 1fr 1fr / 1fr 1fr 1fr;
    gap: calc(var(--mini-cell-size)*30 /200);
    margin: calc(var(--mini-cell-size)*30 /50);
    width: calc(var(--mini-cell-size)*3 +var(--mini-cell-size)*60 /200);
}

.mini-cell {
    height: var(--mini-cell-size);
    width: var(--mini-cell-size);
    background-color: var(--color-light);
    border-radius: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-family: var(--grid-font);
    font-size: var(--mini-cell-size);
    /* user-select help with the behavior of the game by not letting mouse pointer change to select mode */
    user-select: none;
}


/* Part about flipping the card */
.scene {
    width: 100vw;
    height: 90vh;
    perspective: 600px;
}

.card {
    position: relative;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    transition: transform .5s;
}

.card.is-flipped {
    transform: rotateY(-180deg);
}

.card-face {
    position: absolute;
    width: 100%;
    height: 100%;
    backface-visibility: hidden;


}

.card-front-face {

    background-color: var(--color-background);
    display: grid;
    grid-template: 1fr 3fr 1fr / 1fr;
    justify-items: center;
    align-items: center;
}

.card-back-face {

    transform: rotateY(180deg);

    background-color: var(--color-background);
    display: grid;
    grid-template: 1fr 1fr / 1fr 1fr;
    justify-items: center;
    align-items: center;

    padding: 50px;
}